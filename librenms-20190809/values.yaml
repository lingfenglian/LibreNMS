# Default values for librenms.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: librenms/librenms
  tag: latest
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80
env:
  MEMORY_LIMIT: 256M
  UPLOAD_MAX_SIZE: 16M
  OPCACHE_MEM_SIZE: 128
  REAL_IP_FROM: 0.0.0.0/32
  REAL_IP_HEADER: X-Forwarded-For
  LOG_IP_VAR: http_x_forwarded_for
  
  LIBRENMS_POLLER_THREADS: 16
  LIBRENMS_POLLER_INTERVAL: 5
  LIBRENMS_CRON_DISCOVERY_ENABLE: true
  LIBRENMS_CRON_DAILY_ENABLE: true
  LIBRENMS_CRON_ALERTS_ENABLE: true
  LIBRENMS_CRON_BILLING_ENABLE: true
  LIBRENMS_CRON_BILLING_CALCULATE_ENABLE: true
  LIBRENMS_CRON_CHECK_SERVICES_ENABLE: true
  LIBRENMS_CRON_POLLER_ENABLE: true
  LIBRENMS_SNMP_COMMUNITY: librenmsdocker

  TZ: Asia/Shanghai

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

persistence:
  enabled: true
  ## mariadb data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: "-"
  existingClaim: ""
  accessMode: ReadWriteOnce
  size: 8Gi
  resourcePolicy: keep


mariadb:
  ## Whether to deploy a mariadb server to satisfy the applications database requirements. To use an external database set this to false and configure the externalDatabase parameters
  enabled: true
  ## Disable MariaDB replication
  replication:
    enabled: false
  time_out: 30
  ## Create a database and a database user
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#creating-a-database-user-on-first-run
  ##
  db:
    name: librenms
    user: librenms
    ## If the password is not specified, mariadb will generates a random password
    ##
    password: librenms

  ## MariaDB admin password
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#setting-the-root-password-on-first-run
  ##
  # rootUser:
  #   password:

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  master:
    persistence:
      enabled: true
      ## mariadb data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      accessMode: ReadWriteOnce
      size: 8Gi

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
